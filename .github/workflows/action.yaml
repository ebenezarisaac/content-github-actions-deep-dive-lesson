name: Deploy lambda func

on:
  push:
    branches:
      - main
# Jobs
jobs:
  printvars:
    runs-on: ubuntu-latest
    steps:
      - name: print vars
        run: |
            echo ${{ secrets.AWS_ACCOUNT_ID }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install linting libraries
        run: |
            cd function
            pip install flake8
      - name: Lint with flake 8
        run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libs
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: create zipbundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: upload to s3
        run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-22424422424/${{ github.sha }}.zip
  test:
    runs-on: ubuntu-latest
    needs: upload
    strategy:
      matrix:
        input: ["Hello", "Hi"]
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: create test func
        run: |
            aws lambda create-function --function-name test-function-${{ matrix.input }} \
            --code S3Bucket=my-bucket-22424422424,S3Key=${{ github.sha }}.zip \
            --handler lambda_function.lambda_handler --runtime python3.8 \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Invoke test function 
        run: |
            sleep 10
            aws lambda invoke --function-name test-function-${{ matrix.input }} \
              --payload $(echo "{\"input\": \"${{ matrix.input }}\"}" | base64) \
              --output json out 
            if grep -q "Error" out; then
              exit 1
            fi
#       - name: wait 10 seconds
#         run: sleep 10
      - name: Destroy function
        if: ${{ always() }}
        run: aws lambda delete-function --function-name test-function-${{ matrix.input }}
            
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: update the lambda code
        run: |
            aws lambda update-function-code \
              --function-name my-func \
              --s3-bucket my-bucket-22424422424 \
              --s3-key ${{ github.sha }}.zip \
              --publish
          
    
